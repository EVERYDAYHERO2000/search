{"version":3,"sources":["search.js"],"names":["window","substringSearch","options","weight","multiply","similar","_this","this","proto","search","res","in","out","length","substr","_res","toLowerCase","trim","normalStr","str","pos","indexOf","result","tempItem","copyObject","foundPos","push","sort","compare","a","b","comparison","src","Object","assign","inString","wordsSearch","split","words","fullMatch","i","concat","inArray","arr","getKey","obj","index","_result","r"],"mappings":"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","file":"search.min.js","sourcesContent":["\"use strict\";\nwindow.substringSearch = function (options) {\n\n  options = options || {}\n  \n  options.weight = options.weight || 100;\n  options.multiply = options.multiply || true;\n  options.similar = options.similar || [];\n\n  let _this = this,\n    results = [],\n    proto = {\n      weight: 0,\n      search: '',\n      res: '',\n      in: -1,\n      out: -1,\n      length: 0\n    };\n\n\n  this.inString = function (substr, str) {\n\n    substr = '' + substr;\n\n    let wordsSearch = (substr.length) ? substr.trim().split(' ') : [''],\n      words = (str.length) ? str.trim().split(' ') : [''],\n      _res = {\n        str: str\n      },\n      result = [];\n\n    if (substr.length) {\n\n      if (substr.indexOf(' ') + 1) {\n\n        let fullMatch = search(substr, _res);\n\n        if (fullMatch.weight) fullMatch.weight = fullMatch.weight * words.length;\n\n        result = fullMatch;\n\n      }\n\n      for (var i = wordsSearch.length; i--;) {\n\n        result = result.concat(search(wordsSearch[i], _res));\n\n      }\n\n      result = result.sort(compare);\n\n    } else {\n\n      let tempItem = copyObject(proto);\n      tempItem.search = substr;\n      tempItem.res = _res;\n\n      result.push(tempItem);\n\n    }\n\n    return result;\n\n  }\n\n  this.inArray = function (substr, arr, getKey) {\n\n    substr = '' + substr;\n\n    let result = [];\n\n    for (var i = arr.length; i--;) {\n\n      let str = getKey(arr[i]),\n        _res = {\n          obj: arr[i],\n          str: str,\n          index: i\n        },\n        _result = _this.inString(substr, str);\n\n      for (var r = _result.length; r--;) {\n        \n        if (_result[r]) _result[r].res = _res;\n\n      }\n\n      if (_result.length) result = result.concat(_result);\n\n    }\n\n    result = result.sort(compare);\n\n    return result;\n\n  }\n\n  function search(substr, _res) {\n\n    let search = substr.toLowerCase().trim(),\n      str = _res.str,\n      normalStr = str.toLowerCase(),\n      pos = normalStr.indexOf(search),\n      length = substr.length * (options.weight / 10),\n      result = [];\n\n    while (true) {\n\n      let tempItem = copyObject(proto);\n      tempItem.search = substr;\n      tempItem.res = _res;\n\n      let foundPos = normalStr.indexOf(search, pos);\n\n      if (foundPos == -1) break;\n\n      if (normalStr.length >= search.length && normalStr.indexOf(search, pos) + 1) {\n\n        tempItem.weight += (normalStr.length / search.length * 100 > 50) ? options.weight + length : normalStr.length / search.length * options.weight + length;\n        tempItem.in = foundPos;\n        tempItem.out = tempItem.in + search.length;\n        tempItem.length = search.length;\n\n        if (normalStr.length === search.length) tempItem.weight += options.weight * 2;\n\n        if (normalStr[0] === search[0]) tempItem.weight += options.weight;\n\n      }\n\n      result.push(tempItem);\n\n      pos = foundPos + 1;\n\n    }\n    \n    if (!options.multiply){\n      result = result.sort(compare);\n      result = [result[0]];\n    }\n\n    return result;\n  }\n\n  function compare(a, b) {\n\n    a = a.weight;\n    b = b.weight;\n\n    let comparison = 0;\n\n    if (a < b) {\n      comparison = 1;\n    } else if (a > b) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  function copyObject(src) {\n    return Object.assign({}, src);\n  }\n\n  return this;\n\n};"],"sourceRoot":"/source/"}