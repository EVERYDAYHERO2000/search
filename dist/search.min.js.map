{"version":3,"sources":["search.js"],"names":["window","substringSearch","options","proto","weight","search","res","in","out","length","substr","str","toLowerCase","trim","normalStr","pos","indexOf","result","tempItem","copyObject","foundPos","push","compare","a","b","comparison","src","Object","assign","this","inString","wordsSearch","split","words","fullMatch","i","concat","sort","inObject","data","getKey","e"],"mappings":"AAAA,aACAA,OAAAC,gBAAA,SAAAC,GAMA,IAEAC,EAAA,CACAC,OAAA,EACAC,OAAA,GACAC,IAAA,GACAC,IAAA,EACAC,KAAA,EACAC,OAAA,GAyDA,SAAAJ,EAAAK,EAAAC,GAQA,IANA,IAAAN,EAAAK,EAAAE,cAAAC,OACAC,EAAAH,EAAAC,cACAG,EAAAD,EAAAE,QAAAX,GACAI,EAAA,GAAAC,EAAAD,OACAQ,EAAA,KAEA,CAEA,IAAAC,EAAAC,EAAAhB,GACAe,EAAAb,OAAAK,EACAQ,EAAAZ,IAAAK,EAEA,IAAAS,EAAAN,EAAAE,QAAAX,EAAAU,GAEA,IAAA,GAAAK,EAAA,MAEAN,EAAAL,QAAAJ,EAAAI,QAAAK,EAAAE,QAAAX,EAAAU,GAAA,IAEAG,EAAAd,QAAA,GAAAU,EAAAL,OAAAJ,EAAAI,OAAA,IAAA,IAAAA,EAAAK,EAAAL,OAAAJ,EAAAI,OAAA,IAAAA,EACAS,EAAA,GAAAE,EACAF,EAAAV,IAAAU,EAAA,GAAAb,EAAAI,OACAS,EAAAT,OAAAJ,EAAAI,OAEAK,EAAAL,SAAAJ,EAAAI,SAAAS,EAAAd,QAAA,KAEAU,EAAA,KAAAT,EAAA,KAAAa,EAAAd,QAAA,MAMAa,EAAAI,KAAAH,GAEAH,EAAAK,EAAA,EAIA,OAAAH,EAGA,SAAAK,EAAAC,EAAAC,GAKA,IAAAC,EAAA,EAOA,OAVAF,EAAAA,EAAAnB,SACAoB,EAAAA,EAAApB,QAKAqB,EAAA,EACAD,EAAAD,IACAE,GAAA,GAEAA,EAGA,SAAAN,EAAAO,GACA,OAAAC,OAAAC,OAAA,GAAAF,GAGA,OAlHAG,KAAAC,SAAA,SAAApB,EAAAC,GAIA,IAAAoB,GAFArB,EAAA,GAAAA,GAEAD,OAAAC,EAAAG,OAAAmB,MAAA,KAAA,CAAA,IACAC,EAAAtB,EAAAF,OAAAE,EAAAE,OAAAmB,MAAA,KAAA,CAAA,IACAf,EAAA,GAEA,GAAAP,EAAAD,OAAA,CAEA,GAAAE,EAAAK,QAAA,KAAA,EAAA,CAEA,IAAAkB,EAAA7B,EAAAK,EAAAC,GAEAuB,EAAA9B,SAAA8B,EAAA9B,OAAA8B,EAAA9B,OAAA6B,EAAAxB,QAEAQ,EAAAiB,EAMA,IAAA,IAAAC,EAAAJ,EAAAtB,OAAA0B,KAEAlB,EAAAA,EAAAmB,OAAA/B,EAAA0B,EAAAI,GAAAxB,IAIAM,EAAAA,EAAAoB,KAAAf,OAEA,CAEA,IAAAJ,EAAAC,EAAAhB,GACAe,EAAAb,OAAAK,EACAQ,EAAAZ,IAAAK,EAEAM,EAAAI,KAAAH,GAIA,OAAAD,GAIAY,KAAAS,SAAA,SAAA5B,EAAA6B,EAAAC,GAEAA,GACAA,EAAAC,IAmEAZ","file":"search.min.js","sourcesContent":["\"use strict\";\nwindow.substringSearch = function (options) {\n\n  options = options || {\n\n  };\n\n  let _this = this,\n      results = [],\n      proto ={\n        weight: 0,\n        search: '',\n        res: '',\n        in: -1,\n        out: -1,\n        length: 0\n      };\n\n\n  this.inString = function (substr, str) {\n    \n    substr = '' + substr;\n    \n    let wordsSearch = (substr.length) ? substr.trim().split(' ') : [''],\n        words = (str.length) ? str.trim().split(' ') : [''],\n        result = [];\n\n    if (substr.length) {\n\n        if (str.indexOf(' ') + 1){\n\n          let fullMatch = search(substr, str);\n\n          if (fullMatch.weight) fullMatch.weight = fullMatch.weight * words.length;\n\n          result = fullMatch;\n\n        }\n      \n      \n\n      for (var i = wordsSearch.length; i--;) {\n\n        result = result.concat(search(wordsSearch[i], str));\n\n      }\n\n      result = result.sort(compare);\n\n    } else {\n      \n      let tempItem = copyObject(proto);\n          tempItem.search = substr;\n          tempItem.res = str;\n\n      result.push(tempItem);\n\n    }\n\n    return result;\n\n  }\n\n  this.inObject = function (substr, data, getKey) {\n\n    if (getKey) {\n      getKey(e)\n    }\n\n  }\n\n\n  function search(substr, str) {\n\n    let search = substr.toLowerCase().trim(),\n        normalStr = str.toLowerCase(),\n        pos = normalStr.indexOf(search),\n        length = substr.length * 10,\n        result = [];\n\n    while (true) {\n\n      let tempItem = copyObject(proto);\n          tempItem.search = substr;\n          tempItem.res = str;\n      \n      let foundPos = normalStr.indexOf(search, pos);\n\n      if (foundPos == -1) break;\n\n      if (normalStr.length >= search.length && normalStr.indexOf(search, pos) + 1) {\n\n        tempItem.weight += (normalStr.length / search.length * 100 > 50) ? 100 + length : normalStr.length / search.length * 100 + length;\n        tempItem.in = foundPos;\n        tempItem.out = tempItem.in + search.length;\n        tempItem.length = search.length;\n\n        if (normalStr.length === search.length) tempItem.weight += 200;\n\n        if (normalStr[0] === search[0]) tempItem.weight += 100;\n        \n        \n\n      }\n\n      result.push(tempItem);\n\n      pos = foundPos + 1;\n\n    }\n\n    return result;\n  }\n\n  function compare(a, b) {\n\n    a = a.weight;\n    b = b.weight;\n\n    let comparison = 0;\n\n    if (a < b) {\n      comparison = 1;\n    } else if (a > b) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n  \n  function copyObject(src) {\n    return Object.assign({}, src);\n  }\n\n  return this;\n\n};"],"sourceRoot":"/source/"}