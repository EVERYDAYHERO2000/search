{"version":3,"sources":["search.js"],"names":["window","substringSearch","options","weight","multiply","_this","this","proto","search","res","in","out","length","substr","_res","toLowerCase","trim","normalStr","str","pos","indexOf","w","nl","sl","result","tempItem","copyObject","foundPos","push","sort","compare","a","b","comparison","src","Object","assign","inString","wordsSearch","split","words","wsl","wl","fullMatch","i","concat","inArray","arr","getKey","obj","index","_result","rl","r"],"mappings":"AAAA,aACAA,OAAAC,gBAAA,SAAAC,IAEAA,EAAAA,GAAA,IAEAC,OAAAD,EAAAC,QAAA,IACAD,EAAAE,SAAAF,EAAAE,WAAA,EAEA,IAAAC,EAAAC,KAEAC,EAAA,CACAJ,OAAA,EACAK,OAAA,GACAC,IAAA,GACAC,IAAA,EACAC,KAAA,EACAC,OAAA,GAiGA,SAAAJ,EAAAK,EAAAC,GAaA,IAXA,IAAAN,EAAAK,EAAAE,cAAAC,OAEAC,GADA,GAAAH,EAAAI,KACAH,cACAI,EAAAF,EAAAG,QAAAZ,GACAa,EAAAnB,EAAAC,OACAmB,EAAAL,EAAAL,OACAW,EAAAf,EAAAI,OACAA,EAAAC,EAAAD,QAAAS,EAAA,IACAG,EAAA,KAGA,CAEA,IAAAC,EAAAC,EAAAnB,GACAkB,EAAAjB,OAAAK,EACAY,EAAAhB,IAAAK,EAEA,IAAAa,EAAAV,EAAAG,QAAAZ,EAAAW,GAEA,IAAA,GAAAQ,EAAA,MAEAJ,GAAAD,GAAAL,EAAAG,QAAAZ,EAAAW,GAAA,IAEAM,EAAAtB,QAAA,GAAAmB,EAAAC,EAAA,IAAAF,EAAAT,EAAAU,EAAAC,EAAAF,EAAAT,EACAa,EAAAtB,OAAAmB,EAAAK,EACAF,EAAA,GAAAE,EACAF,EAAAd,IAAAc,EAAA,GAAAjB,EAAAI,OAGAU,KAFAG,EAAAb,OAAAW,KAEAE,EAAAtB,QAAA,EAAAkB,GAEAJ,EAAA,KAAAT,EAAA,KAAAiB,EAAAtB,QAAAkB,IAIAG,EAAAI,KAAAH,GAEAN,EAAAQ,EAAA,EASA,OALAzB,EAAAE,WAEAoB,EAAA,EADAA,EAAAA,EAAAK,KAAAC,IACA,KAGAN,EAGA,SAAAM,EAAAC,EAAAC,GAKA,IAAAC,EAAA,EAOA,OAVAF,EAAAA,EAAA5B,SACA6B,EAAAA,EAAA7B,QAKA8B,EAAA,EACAD,EAAAD,IACAE,GAAA,GAEAA,EAGA,SAAAP,EAAAQ,GACA,OAAAC,OAAAC,OAAA,GAAAF,GAGA,OAjKA5B,KAAA+B,SAAA,SAAAxB,EAAAK,GAIA,IAAAoB,GAFAzB,EAAA,GAAAA,GAEAD,OAAAC,EAAAG,OAAAuB,MAAA,KAAA,CAAA,IACAC,EAAAtB,EAAAN,OAAAM,EAAAF,OAAAuB,MAAA,KAAA,CAAA,IACAE,EAAAH,EAAA1B,OACAW,EAAAV,EAAAD,OACA8B,EAAAF,EAAA5B,OACAE,EAAA,CACAI,IAAAA,GAEAM,EAAA,GAEA,GAAAD,EAAA,CAGA,GAAAV,EAAAO,QAAA,KAAA,EAAA,CAEA,IAAAuB,EAAAnC,EAAAK,EAAAC,GAEA6B,EAAAxC,SAAAwC,EAAAxC,OAAAwC,EAAAxC,OAAAuC,GAEAlB,EAAAmB,EAIA,IAAA,IAAAC,EAAAH,EAAAG,KAEApB,EAAAA,EAAAqB,OAAArC,EAAA8B,EAAAM,GAAA9B,IAIAU,EAAAA,EAAAK,KAAAC,OAEA,CAEA,IAAAL,EAAAC,EAAAnB,GACAkB,EAAAjB,OAAAK,EACAY,EAAAhB,IAAAK,EAEAU,EAAAI,KAAAH,GAIA,OAAAD,GAOAlB,KAAAwC,QAAA,SAAAjC,EAAAkC,EAAAC,GAEAnC,EAAA,GAAAA,EAKA,IAHA,IAAAW,EAAA,GAGAoB,EAFAG,EAAAnC,OAEAgC,KAAA,CAEA,IAAA1B,EAAA8B,EAAAD,EAAAH,IACA9B,EAAA,CACAmC,IAAAF,EAAAH,GACA1B,IAAAA,EACAgC,MAAAN,GAEAO,EAAA9C,EAAAgC,SAAAxB,EAAAK,GACAkC,EAAAD,EAAAvC,OAEA,GAAAwC,EAAA,CACA,IAAA,IAAAC,EAAAD,EAAAC,KAEAF,EAAAE,KAAAF,EAAAE,GAAA5C,IAAAK,GAIAU,EAAAA,EAAAqB,OAAAM,IAUA,OAFA3B,EAAAA,EAAAK,KAAAC,IA4EAxB","file":"search.min.js","sourcesContent":["\"use strict\";\nwindow.substringSearch = function (options) {\n\n  options = options || {}\n  \n  options.weight   = options.weight || 100;\n  options.multiply = options.multiply || true;\n\n  let _this = this,\n    results = [],\n    proto = {\n      weight: 0,\n      search: '',\n      res:    '',\n      in:     -1,\n      out:    -1,\n      length: 0\n    };\n\n  /*\n    search in the string\n  */\n  this.inString = function (substr, str) {\n\n    substr = '' + substr;\n\n    let wordsSearch = (substr.length) ? substr.trim().split(' ') : [''],\n      words = (str.length) ? str.trim().split(' ') : [''],\n      wsl = wordsSearch.length,\n      sl = substr.length, \n      wl = words.length, \n      _res = {\n        str: str\n      },\n      result = [];\n\n    if (sl) {\n      \n\n      if (substr.indexOf(' ') + 1) {\n\n        let fullMatch = search(substr, _res);\n\n        if (fullMatch.weight) fullMatch.weight = fullMatch.weight * wl;\n\n        result = fullMatch;\n\n      }\n\n      for (var i = wsl; i--;) {\n\n        result = result.concat(search(wordsSearch[i], _res));\n\n      }\n\n      result = result.sort(compare);\n\n    } else {\n\n      let tempItem = copyObject(proto);\n      tempItem.search = substr;\n      tempItem.res = _res;\n\n      result.push(tempItem);\n\n    }\n\n    return result;\n\n  }\n  \n  /*\n    search in the string\n  */\n  this.inArray = function (substr, arr, getKey) {\n\n    substr = '' + substr;\n\n    let result = [],\n        al = arr.length;\n\n    for (var i = al; i--;) {\n\n      let str = getKey(arr[i]),\n        _res = {\n          obj: arr[i],\n          str: str,\n          index: i\n        },\n        _result = _this.inString(substr, str),\n        rl = _result.length;\n\n      if (rl) {\n        for (var r = rl; r--;) {\n        \n        if (_result[r]) _result[r].res = _res;\n\n        }\n        \n        result = result.concat(_result);\n        \n      }\n\n    \n\n    }\n\n    result = result.sort(compare);\n\n    return result;\n\n  }\n\n  function search(substr, _res) {\n\n    let search = substr.toLowerCase().trim(),\n      str = ''+_res.str,\n      normalStr = str.toLowerCase(),\n      pos = normalStr.indexOf(search),\n      w = options.weight,\n      nl = normalStr.length,\n      sl = search.length,  \n      length = substr.length * (w / 10),\n      result = [];\n        \n\n    while (true) {\n\n      let tempItem = copyObject(proto);\n      tempItem.search = substr;\n      tempItem.res = _res;\n\n      let foundPos = normalStr.indexOf(search, pos);\n\n      if (foundPos == -1) break;\n\n      if (nl >= sl && normalStr.indexOf(search, pos) + 1) {\n\n        tempItem.weight += (nl / sl * 100 > 50) ? w + length : nl / sl * w + length;\n        tempItem.weight = nl - foundPos;\n        tempItem.in = foundPos;\n        tempItem.out = tempItem.in + search.length;\n        tempItem.length = sl;\n\n        if (nl === sl) tempItem.weight += w * 2;\n\n        if (normalStr[0] === search[0]) tempItem.weight += w;\n\n      }\n\n      result.push(tempItem);\n\n      pos = foundPos + 1;\n\n    }\n    \n    if (!options.multiply){\n      result = result.sort(compare);\n      result = [result[0]];\n    }\n\n    return result;\n  }\n\n  function compare(a, b) {\n\n    a = a.weight;\n    b = b.weight;\n\n    let comparison = 0;\n\n    if (a < b) {\n      comparison = 1;\n    } else if (a > b) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  function copyObject(src) {\n    return Object.assign({}, src);\n  }\n\n  return this;\n\n};"],"sourceRoot":"/source/"}