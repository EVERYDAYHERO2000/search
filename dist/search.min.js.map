{"version":3,"sources":["search.js"],"names":["window","substringSearch","options","_this","this","proto","weight","search","res","in","out","length","substr","_res","toLowerCase","trim","normalStr","str","pos","indexOf","result","tempItem","copyObject","foundPos","push","compare","a","b","comparison","src","Object","assign","inString","wordsSearch","split","words","fullMatch","i","concat","sort","inObject","data","getKey","obj","_result"],"mappings":"AAAA,aACAA,OAAAC,gBAAA,SAAAC,GAMA,IAAAC,EAAAC,KAEAC,EAAA,CACAC,OAAA,EACAC,OAAA,GACAC,IAAA,GACAC,IAAA,EACAC,KAAA,EACAC,OAAA,GA0EA,SAAAJ,EAAAK,EAAAC,GASA,IAPA,IAAAN,EAAAK,EAAAE,cAAAC,OAEAC,EADAH,EAAAI,IACAH,cACAI,EAAAF,EAAAG,QAAAZ,GACAI,EAAA,GAAAC,EAAAD,OACAS,EAAA,KAEA,CAEA,IAAAC,EAAAC,EAAAjB,GACAgB,EAAAd,OAAAK,EACAS,EAAAb,IAAAK,EAEA,IAAAU,EAAAP,EAAAG,QAAAZ,EAAAW,GAEA,IAAA,GAAAK,EAAA,MAEAP,EAAAL,QAAAJ,EAAAI,QAAAK,EAAAG,QAAAZ,EAAAW,GAAA,IAEAG,EAAAf,QAAA,GAAAU,EAAAL,OAAAJ,EAAAI,OAAA,IAAA,IAAAA,EAAAK,EAAAL,OAAAJ,EAAAI,OAAA,IAAAA,EACAU,EAAA,GAAAE,EACAF,EAAAX,IAAAW,EAAA,GAAAd,EAAAI,OACAU,EAAAV,OAAAJ,EAAAI,OAEAK,EAAAL,SAAAJ,EAAAI,SAAAU,EAAAf,QAAA,KAEAU,EAAA,KAAAT,EAAA,KAAAc,EAAAf,QAAA,MAMAc,EAAAI,KAAAH,GAEAH,EAAAK,EAAA,EAIA,OAAAH,EAGA,SAAAK,EAAAC,EAAAC,GAKA,IAAAC,EAAA,EAOA,OAVAF,EAAAA,EAAApB,SACAqB,EAAAA,EAAArB,QAKAsB,EAAA,EACAD,EAAAD,IACAE,GAAA,GAEAA,EAGA,SAAAN,EAAAO,GACA,OAAAC,OAAAC,OAAA,GAAAF,GAGA,OApIAzB,KAAA4B,SAAA,SAAApB,EAAAK,GAIA,IAAAgB,GAFArB,EAAA,GAAAA,GAEAD,OAAAC,EAAAG,OAAAmB,MAAA,KAAA,CAAA,IACAC,EAAAlB,EAAAN,OAAAM,EAAAF,OAAAmB,MAAA,KAAA,CAAA,IACArB,EAAA,CAAAI,IAAAA,GACAG,EAAA,GAEA,GAAAR,EAAAD,OAAA,CAEA,GAAAM,EAAAE,QAAA,KAAA,EAAA,CAEA,IAAAiB,EAAA7B,EAAAK,EAAAC,GAEAuB,EAAA9B,SAAA8B,EAAA9B,OAAA8B,EAAA9B,OAAA6B,EAAAxB,QAEAS,EAAAgB,EAMA,IAAA,IAAAC,EAAAJ,EAAAtB,OAAA0B,KAEAjB,EAAAA,EAAAkB,OAAA/B,EAAA0B,EAAAI,GAAAxB,IAIAO,EAAAA,EAAAmB,KAAAd,OAEA,CAEA,IAAAJ,EAAAC,EAAAjB,GACAgB,EAAAd,OAAAK,EACAS,EAAAb,IAAAK,EAEAO,EAAAI,KAAAH,GAIA,OAAAD,GAIAhB,KAAAoC,SAAA,SAAA5B,EAAA6B,EAAAC,GAEA9B,EAAA,GAAAA,EAIA,IAFA,IAAAQ,EAAA,GAEAiB,EAAAI,EAAA9B,OAAA0B,KAAA,CAEA,IAAApB,EAAAyB,EAAAD,EAAAJ,IACAxB,EAAA,CAAA8B,IAAAF,EAAAJ,GAAApB,IAAAA,GACA2B,EAAAzC,EAAA6B,SAAApB,EAAAK,GAEA2B,EAAApC,IAAAK,EAEAO,EAAAA,EAAAkB,OAAAM,GAMA,OAFAxB,EAAAA,EAAAmB,KAAAd,IAqEArB","file":"search.min.js","sourcesContent":["\"use strict\";\nwindow.substringSearch = function (options) {\n\n  options = options || {\n\n  };\n\n  let _this = this,\n      results = [],\n      proto ={\n        weight: 0,\n        search: '',\n        res: '',\n        in: -1,\n        out: -1,\n        length: 0\n      };\n\n\n  this.inString = function (substr, str) {\n    \n    substr = '' + substr;\n    \n    let wordsSearch = (substr.length) ? substr.trim().split(' ') : [''],\n        words = (str.length) ? str.trim().split(' ') : [''],\n        _res = {str: str},\n        result = [];\n\n    if (substr.length) {\n\n        if (str.indexOf(' ') + 1){\n\n          let fullMatch = search(substr, _res);\n\n          if (fullMatch.weight) fullMatch.weight = fullMatch.weight * words.length;\n\n          result = fullMatch;\n\n        }\n      \n      \n\n      for ( var i = wordsSearch.length; i--; ) {\n\n        result = result.concat( search( wordsSearch[i], _res ) );\n\n      }\n\n      result = result.sort(compare);\n\n    } else {\n      \n      let tempItem = copyObject(proto);\n          tempItem.search = substr;\n          tempItem.res = _res;\n\n      result.push(tempItem);\n\n    }\n\n    return result;\n\n  }\n\n  this.inObject = function (substr, data, getKey) {\n    \n    substr = '' + substr;\n    \n    let result = [];\n    \n    for ( var i = data.length; i--; ){\n      \n      let str = getKey(data[i]),\n          _res = {obj: data[i], str: str},\n          _result = _this.inString(substr, str);\n      \n        _result.res = _res;\n      \n      result = result.concat(_result);\n          \n    }\n    \n    result = result.sort(compare);\n    \n    return result;\n\n  }\n\n\n  function search(substr, _res) {\n\n    let search = substr.toLowerCase().trim(),\n        str = _res.str,\n        normalStr = str.toLowerCase(),\n        pos = normalStr.indexOf(search),\n        length = substr.length * 10,\n        result = [];\n\n    while (true) {\n\n      let tempItem = copyObject(proto);\n          tempItem.search = substr;\n          tempItem.res = _res;\n      \n      let foundPos = normalStr.indexOf(search, pos);\n\n      if (foundPos == -1) break;\n\n      if (normalStr.length >= search.length && normalStr.indexOf(search, pos) + 1) {\n\n        tempItem.weight += (normalStr.length / search.length * 100 > 50) ? 100 + length : normalStr.length / search.length * 100 + length;\n        tempItem.in = foundPos;\n        tempItem.out = tempItem.in + search.length;\n        tempItem.length = search.length;\n\n        if (normalStr.length === search.length) tempItem.weight += 200;\n\n        if (normalStr[0] === search[0]) tempItem.weight += 100;\n        \n        \n\n      }\n\n      result.push(tempItem);\n\n      pos = foundPos + 1;\n\n    }\n\n    return result;\n  }\n\n  function compare(a, b) {\n\n    a = a.weight;\n    b = b.weight;\n\n    let comparison = 0;\n\n    if (a < b) {\n      comparison = 1;\n    } else if (a > b) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n  \n  function copyObject(src) {\n    return Object.assign({}, src);\n  }\n\n  return this;\n\n};"],"sourceRoot":"/source/"}